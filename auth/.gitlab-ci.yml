stages:
  - test
  - build
  - image
  - deploy

test:
  image:
    name: golang:1.17.1-stretch
  stage: test
  script:
    - go test -v ./...

build image:
  image:
    name: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [""]
  stage: build
  needs: []
  variables:
    CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE: $CI_PROJECT_DIR/Dockerfile
    PREFIX: ""
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CONTEXT --dockerfile $DOCKERFILE --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} --cache=true --cache-ttl=120h

.image_deploy:
  image: 
    name: lachlanevenson/k8s-kubectl:v1.22.0
    entrypoint: [""]
  stage: deploy
  when: manual
  needs:
    - build image
  script:
    - export K8S_WORKLOAD_TYPE=deployment
    - export K8S_WORKLOAD_NAME=$CI_PROJECT_NAME
    - export K8S_CONTAINER_NAME=$CI_PROJECT_NAME
    - export K8S_NS=$(echo $CI_PROJECT_PATH | awk -F\/ '{print $(NF-1)}')
    - echo "Deploy $K8S_WORKLOAD_TYPE $K8S_WORKLOAD_NAME to namespace $K8S_NS"
    - kubectl create deployment $K8S_WORKLOAD_NAME --image=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -n ${K8S_NS} || echo deployment already exists
    - kubectl --record ${K8S_WORKLOAD_TYPE}.apps/${K8S_WORKLOAD_NAME} set image ${K8S_WORKLOAD_TYPE}.v1.apps/${K8S_WORKLOAD_NAME} ${K8S_CONTAINER_NAME}=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -n ${K8S_NS}
    - kubectl rollout restart ${K8S_WORKLOAD_TYPE} ${K8S_WORKLOAD_NAME} -n ${K8S_NS} 
    - kubectl rollout status ${K8S_WORKLOAD_TYPE} ${K8S_WORKLOAD_NAME} -n ${K8S_NS} --timeout=60s

deploy prod:
  stage: deploy
  needs: [build image]
  trigger:
    project: golang-developer-cloudmts_main/team12/k8s
  when: always
  only:
    - main
